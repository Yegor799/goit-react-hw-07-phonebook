{"version":3,"sources":["redux/contacts/contacts-actions.js","redux/contacts/contacts-operations.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.jsx","App.jsx","redux/contacts/contacts-reducer.js","redux/store.js","index.js"],"names":["fetchContactSuccess","createAction","fetchContactRequest","fetchContactError","addContactSuccess","addContactRequest","addContactError","deleteContactSuccess","deleteContactRequest","deleteContactError","filterContacts","axios","defaults","baseURL","connect","state","contacts","items","dispatch","addContact","name","number","contact","id","uuidv4","actions","post","then","data","catch","error","contactsOperations","useState","setName","setNumber","onSubmit","e","preventDefault","find","alert","className","type","value","pattern","title","required","onChange","target","filter","contactActions","console","log","names","item","toLowerCase","includes","onDelete","contactID","contactId","delete","fetchContacts","get","useEffect","map","onClick","App","createReducer","_","payload","combineReducers","store","configureStore","reducer","contactsReducer","middleware","getDefaultMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4852bc9b.chunk.js","sourcesContent":["\nimport { createAction } from '@reduxjs/toolkit';\n\nexport const fetchContactSuccess = createAction('contacts/fetchContactSuccess');\nexport const fetchContactRequest = createAction('contacts/fetchContactRequest');\nexport const fetchContactError = createAction('contacts/fetchContactError');\n\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\nexport const addContactRequest = createAction('contacts/addContactRequest');\nexport const addContactError = createAction('contacts/addContactError');\n\nexport const deleteContactSuccess = createAction('contacts/deleteContactSuccess');\nexport const deleteContactRequest = createAction('contacts/deleteContactRequest');\nexport const deleteContactError = createAction('contacts/deleteContactError');\n\nexport const filterContacts = createAction('contacts/filterContacts');\n","import axios from 'axios';\nimport { v4 as uuidv4 } from 'uuid';\nimport * as actions from './contacts-actions'\n\n\naxios.defaults.baseURL = 'http://localhost:3001';\n\n\nexport const fetchContacts = () => dispatch => {\n    dispatch(actions.fetchContactRequest());\n\n    axios\n        .get('/contacts')\n        .then(({ data }) => dispatch(actions.fetchContactSuccess(data)))\n        .catch(error => dispatch(actions.fetchContactError(error)))\n};\n\nexport const addContact = (name, number) => dispatch => {\n\n    const contact = {\n        name,\n        number,\n        id: uuidv4(),\n    }\n\n    dispatch(actions.addContactRequest());\n\n    axios\n        .post('/contacts', contact)\n        .then(({ data }) => dispatch(actions.addContactSuccess(data)))\n        .catch(error => dispatch(actions.addContactError(error)))\n\n};\n\nexport const deleteContact = contactId => dispatch => {\n    dispatch(actions.deleteContactRequest());\n\n    axios\n        .delete(`/contacts/${contactId}`)\n        .then(() => dispatch(actions.deleteContactSuccess(contactId)))\n        .catch(error => dispatch(actions.deleteContactError(error)))\n};","import \"./ContactForm.css\";\nimport { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as contactsOperations from \"../../redux/contacts/contacts-operations\"\n\n function ContactForm({contacts, addContact}) {\n\n    const [name, setName] = useState('');\n    const [number, setNumber] = useState('');\n\n     const handleNameChange = e => {\n         setName(e.target.value);\n     };\n\n     const handleNumberChange = e => {\n         setNumber(e.target.value);\n     };\n     \n     const onSubmit = (name, number) => {\n         const duplicateName = contacts.find(contact => contact.name === name);\n         duplicateName ? alert(`${name} is already in contacts`) : addContact(name, number);\n     };\n\n     const handleSubmit = e => {\n         e.preventDefault();\n         onSubmit(name, number);\n         setName('');\n         setNumber('');\n     };\n     \n    return (\n        <form onSubmit={handleSubmit} className=\"ContactForm\">\n            <p>Name</p>\n            <label>\n                <input\n                    type=\"text\"\n                    name=\"name\"\n                    value={name}\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                    title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n                    required\n                    onChange={handleNameChange}\n\n                />\n            </label>\n\n            <p>Number</p>\n            <label>\n                <input\n                    type=\"tel\"\n                    name=\"number\"\n                    value={number}\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                    title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n                    required\n                    onChange={handleNumberChange}\n                />\n            </label>\n            <button type=\"submit\" className=\"ContactForm__button\">Add contact</button>\n        </form>\n    )\n }\n\nconst mapStateToProps = state => ({\n    contacts: state.contacts.items,\n});\n\nconst mapDispatchToProps = dispatch => ({\n    addContact: (name, number) => dispatch(contactsOperations.addContact(name, number)) \n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);","import { connect } from \"react-redux\";\nimport * as contactActions from \"../../redux/contacts/contacts-actions\";\n\n\nfunction Filter({ filter, onChange }) {\n    \n    console.log(filter)\n    return (\n        <>\n            <p>Find contacts by name</p>\n            <label>\n                <input\n                    type=\"text\"\n                    name=\"filter\"\n                    // value={filter}\n                    onChange={onChange}\n                />\n            </label>\n        </>\n    )\n}\n\nconst mapStateToProps = state => ({\n    filter: state.contacts.filter\n})\n\nconst mapDispatchToProps = dispatch => ({\n    onChange: e => dispatch(contactActions.filterContacts(e.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n\n","import \"./ContactList.css\";\nimport { connect } from \"react-redux\";\nimport * as contactsOperations from \"../../redux/contacts/contacts-operations\";\nimport { useEffect } from 'react';\n\nfunction ContactList({ names, onDelete, fetchContacts }) {\n\nuseEffect(() => {\n    fetchContacts()    \n}, [])\n\n    return (\n        <ul className=\"ContactList\">\n            {names.map(contact => {\n                return (\n                    <li key={contact.id} className=\"ContactList__item\">\n                        <p>{contact.name}: {contact.number}</p>\n                        <button onClick={() => onDelete(contact.id)}>Delete</button>\n                    </li>\n                )\n            })}\n        </ul>\n    )\n}\n\nconst mapStateToProps = state => {\n\n  const { filter, items } = state.contacts;\n  const filteredNames = items.filter(item => item.name.toLowerCase().includes(filter.toLowerCase()));\n\n    return {\n        names: filteredNames,\n    }\n};\n\nconst mapDispatchToProps = dispatch => ({\n    onDelete: contactID => dispatch(contactsOperations.deleteContact(contactID)),\n    fetchContacts: ()=> dispatch(contactsOperations.fetchContacts())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);","// import { v4 as uuidv4 } from 'uuid';\nimport './App.css';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport Filter from './components/Filter/Filter';\nimport ContactList from './components/ContactList/ContactList';\nimport * as contactsActions from './redux/contacts/contacts-actions';\n\n\nfunction App() {  \n \n  \n  return (\n    <div className=\"Container\">\n\n      <ContactForm />\n\n      <h2>Contacts</h2>\n\n      <Filter />\n\n      <ContactList />\n\n    </div>\n  );\n}\n\n\n\nexport default App;\n","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport {\n    addContactSuccess,\n    addContactRequest,\n    addContactError,\n    deleteContactRequest,\n    deleteContactError,\n    deleteContactSuccess,\n    filterContacts,\n    fetchContactSuccess,\n    fetchContactRequest,\n    fetchContactError\n} from './contacts-actions';\n\n\nconst items = createReducer([], {\n    [fetchContactSuccess]: (_, {payload}) => payload,\n    [addContactSuccess]: (state, { payload }) => [...state, payload],\n    [deleteContactSuccess]: (state, { payload }) => state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer('', {\n    [filterContacts]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n    items,\n    filter,\n});\n\n\n\n\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport contactsReducer from \"./contacts/contacts-reducer\";\n\n\nconst store = configureStore({\n    reducer: {\n        contacts: contactsReducer\n    },\n    middleware: (getDefaultMiddleware) => getDefaultMiddleware(),\n});\n\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}